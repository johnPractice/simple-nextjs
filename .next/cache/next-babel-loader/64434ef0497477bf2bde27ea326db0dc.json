{"ast":null,"code":"var _jsxFileName = \"D:\\\\tutrial\\\\junior to senior\\\\practice_file\\\\next-js\\\\pages\\\\robots.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nconst Robots = props => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Robots\"), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.robots.map(robot => {\n    return __jsx(Link, {\n      href: `robot/${robot.id}`,\n      key: robot.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }, robot.name));\n  })), __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Home\")));\n}; //for initial props :)\n\n\nRobots.getInitialProps = async () => {\n  const res = await fetch(\" https://jsonplaceholder.typicode.com/users\");\n  const data = await res.json();\n  return {\n    robots: data\n  };\n};\n\nexport default Robots;","map":{"version":3,"sources":["D:/tutrial/junior to senior/practice_file/next-js/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","cursor","name","getInitialProps","res","data","json"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAkBC,KAAD,IAAW;AAC3B,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAG,SAAQA,KAAK,CAACC,EAAG,EAA9B;AAAiC,MAAA,GAAG,EAAED,KAAK,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCF,KAAK,CAACG,IAAzC,CADF,CADF;AAKD,GANA,CADH,CAFF,EAWE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAXF,CADF;AAiBD,CAlBD,C,CAoBA;;;AACAP,MAAM,CAACQ,eAAP,GAAyB,YAAY;AACnC,QAAMC,GAAG,GAAG,MAAMV,KAAK,CAAC,6CAAD,CAAvB;AACA,QAAMW,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB;AACA,SAAO;AAAET,IAAAA,MAAM,EAAEQ;AAAV,GAAP;AACD,CAJD;;AAMA,eAAeV,MAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nconst Robots = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Robots</h1>\r\n      <div>\r\n        {props.robots.map((robot) => {\r\n          return (\r\n            <Link href={`robot/${robot.id}`} key={robot.id}>\r\n              <h3 style={{ cursor: \"pointer\" }}>{robot.name}</h3>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n      <Link href=\"/\">\r\n        <button>Home</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\n//for initial props :)\r\nRobots.getInitialProps = async () => {\r\n  const res = await fetch(\" https://jsonplaceholder.typicode.com/users\");\r\n  const data = await res.json();\r\n  return { robots: data };\r\n};\r\n\r\nexport default Robots;\r\n"]},"metadata":{},"sourceType":"module"}