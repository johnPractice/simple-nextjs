{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\tutrial\\\\junior to senior\\\\practice_file\\\\next-js\\\\pages\\\\robots.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Robots = function Robots(props) {\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Robots\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, props.robots.map(function (robot) {\n    return __jsx(Link, {\n      href: \"robot/\".concat(robot.id),\n      key: robot.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }, __jsx(\"h3\", {\n      style: {\n        cursor: \"pointer\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 15\n      }\n    }, robot.name));\n  })), __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, \"Home\")));\n};\n\n_c = Robots;\nRobots.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\" https://jsonplaceholder.typicode.com/users\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;\n\nvar _c;\n\n$RefreshReg$(_c, \"Robots\");","map":{"version":3,"sources":["D:/tutrial/junior to senior/practice_file/next-js/pages/robots.js"],"names":["Link","fetch","Robots","props","robots","map","robot","id","cursor","name","getInitialProps","res","json","data"],"mappings":";;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,MAAN,CAAaC,GAAb,CAAiB,UAACC,KAAD,EAAW;AAC3B,WACE,MAAC,IAAD;AAAM,MAAA,IAAI,kBAAWA,KAAK,CAACC,EAAjB,CAAV;AAAiC,MAAA,GAAG,EAAED,KAAK,CAACC,EAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE;AAAV,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmCF,KAAK,CAACG,IAAzC,CADF,CADF;AAKD,GANA,CADH,CAFF,EAWE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAXF,CADF;AAiBD,CAlBD;;KAAMP,M;AAoBNA,MAAM,CAACQ,eAAP,yEAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACLT,KAAK,CAAC,6CAAD,CADA;;AAAA;AACjBU,UAAAA,GADiB;AAAA;AAAA,iBAEJA,GAAG,CAACC,IAAJ,EAFI;;AAAA;AAEjBC,UAAAA,IAFiB;AAAA,2CAGhB;AAAET,YAAAA,MAAM,EAAES;AAAV,WAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;AAMA,eAAeX,MAAf","sourcesContent":["import Link from \"next/link\";\r\nimport fetch from \"isomorphic-unfetch\";\r\n\r\nconst Robots = (props) => {\r\n  return (\r\n    <div>\r\n      <h1>Robots</h1>\r\n      <div>\r\n        {props.robots.map((robot) => {\r\n          return (\r\n            <Link href={`robot/${robot.id}`} key={robot.id}>\r\n              <h3 style={{ cursor: \"pointer\" }}>{robot.name}</h3>\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n      <Link href=\"/\">\r\n        <button>Home</button>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nRobots.getInitialProps = async () => {\r\n  const res = await fetch(\" https://jsonplaceholder.typicode.com/users\");\r\n  const data = await res.json();\r\n  return { robots: data };\r\n};\r\n\r\nexport default Robots;\r\n"]},"metadata":{},"sourceType":"module"}