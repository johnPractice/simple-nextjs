{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from \"next/link\";\nimport fetch from \"isomorphic-unfetch\";\n\nvar Robots = function Robots(props) {\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Robots\"), __jsx(\"div\", null, props.robots.map(function (robot) {\n    return __jsx(Link, {\n      href: \"robot/\".concat(robot.id),\n      key: robot.id\n    }, __jsx(\"h3\", {\n      style: {\n        cursor: \"pointer\"\n      }\n    }, robot.name));\n  })), __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"button\", null, \"Home\")));\n}; //for initial props :)\n\n\nRobots.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\" https://jsonplaceholder.typicode.com/users\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            robots: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Robots;","map":null,"metadata":{},"sourceType":"module"}